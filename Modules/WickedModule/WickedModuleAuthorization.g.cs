  
//----------------------
// <auto-generated>
//     Generated by LazyMagic, do not edit directly. Changes will be overwritten.
//     Create your own cs file for this partial class and implement any endpoint methods 
// </auto-generated>
//----------------------

namespace WickedModule;

/// <summary>
/// You can override the default behavior of the authorization class by implementing this interface and providing your own implementation.
/// You then register your implementation BEFORE calling this projects service registration method. Note that we use TryAddSingleton to avoid
/// registering multiple implementations of the same interface; the first registration wins.
/// </summary>
public partial interface IWickedModuleAuthorization : ILzAuthorization 
{ 
}

/// <summary>
/// Implement the GetUserPermisionsAsync and LoadPermissionsAsync methods to override the default behavior
/// provided by the methods defined in the interface definition. Since this is a partial class, you define 
/// these methods in a separate file (not having the *.g.cs suffix). You can call the helper methods, 
/// GetUserDefaultPermissionsAsync and LoadDefaultPermissionsAsync, to get the default behavior and then 
/// modify it as needed.
/// </summary>
public partial class WickedModuleAuthorization : LzAuthorization, IWickedModuleAuthorization
{
    
}
