// NSWAG code refactored by LazyMagic.
// We use NSWAG to generate a baseclass, partial class and interface. 
// I{ModuleName}Controller.g.cs - defines a partial interface
// {ModuleName}ControllerBase.g.cs - defines the base class
// {ModuleName}Controller.g.cs - defines a partial class that inherits the base class
// To add or override class behavior, create a new partial class file
// {projectName}Controller.cs - overrides methods in the base class
// Dependency Injection system.
// Note: We also generate some helper classes 
// {ModuleName}Authorization.g.cs - Partial class for Authorization system
// {ModuleName}Registration.g.cs - Registers classes with the DI system
//
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.3.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

namespace ConsumerModule
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.3.0))")]

    public abstract class ConsumerModuleControllerBase : Controller, IConsumerModuleController
    {

        /// <summary>
        /// Get user preferences
        /// </summary>
        /// <returns>successful operation</returns>
        [HttpGet, Route("preferences")]
        public virtual async Task<ActionResult<Preferences>> GetPreferences()
        {
            var callerInfo = await ConsumerModuleAuthorization.GetCallerInfoAsync(this.Request);
            return await PreferencesRepo.ReadAsync(callerInfo, callerInfo.LzUserId);
        }
        /// <summary>
        /// Update user preferences
        /// </summary>
        /// <returns>successful operation</returns>
        [HttpPost, Route("preferences")]
        public virtual async Task<ActionResult<Preferences>> UpdatePreferences([FromBody] Preferences body)
        {
            var callerInfo = await ConsumerModuleAuthorization.GetCallerInfoAsync(this.Request);
            return await PreferencesRepo.UpdateAsync(callerInfo, body);
        }
		public IConsumerModuleAuthorization ConsumerModuleAuthorization { get; set; }
		public IPreferencesRepo PreferencesRepo { get; set; }
		public ICategoryRepo CategoryRepo { get; set; }
		public ITagRepo TagRepo { get; set; }
		public IPetRepo PetRepo { get; set; }
		public IOrderRepo OrderRepo { get; set; }
		protected virtual void Init() { }
    }


}
